services:
  web:
    build: .
    container_name: orchestration
    command: >
      sh -c "
        /wait-for-mysql.sh &&
        python manage.py migrate --noinput &&
        gunicorn OrchestrationRouteurCISCO.wsgi:application --bind 0.0.0.0:8000 --workers 4
      "
    expose:
      - "8000"  # expose en interne uniquement, pas mappe vers l'ext√©rieur
    depends_on:
      mysql_db:
        condition: service_healthy
    volumes:
      - .:/app
    environment:
      - MYSQL_HOST=mysql_db
      - MYSQL_PORT=3306
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=orchestration_routeur

  mysql_db:
    image: mysql:8.0
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: orchestration_routeur
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-prootpassword" ]
      interval: 5s
      timeout: 10s
      retries: 5
    volumes:
      - ~/mysql/data:/var/lib/mysql

  nginx:
    image: nginx:latest
    container_name: nginx
    depends_on:
      - web
    ports:
      - "8080:80"  # mappe port local 8080 vers port 80 nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./staticfiles:/staticfiles:ro
